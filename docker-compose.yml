version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123456!"
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false   # dev only
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports: [ "9200:9200" ]
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 10s
      timeout: 5s
      retries: 30

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: [ "5601:5601" ]
    depends_on:
      elasticsearch:
        condition: service_healthy

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.3
    container_name: logstash
    ports: [ "5044:5044" ]  # TCP input from apps
    volumes:
      - ./observability/logstash/pipeline:/usr/share/logstash/pipeline:ro
    depends_on:
      elasticsearch:
        condition: service_healthy

  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    environment:
      SERVER_PORT: 8888
    volumes:
      - ./config-repo:/config-repo:ro
    ports:
      - "8888:8888"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  discovery-service:
    build:
      context: .
      dockerfile: discovery-service/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8761/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    ports:
      - "8080:8080"
    depends_on:
      discovery-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 30

  department-service:
    build:
      context: .
      dockerfile: department-service/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      JAVA_OPTS: "-XX:MaxRAMPercentage=75.0"
    ports:
      - "8082:8082"
    depends_on:
      api-gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy

  employee-service:
    build:
      context: .
      dockerfile: employee-service/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      JAVA_OPTS: "-XX:MaxRAMPercentage=75.0"
    ports:
      - "8081:8081"
    depends_on:
      api-gateway:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  pgdata:
